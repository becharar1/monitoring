version: "3.7"
services:

  oracle:
    image:  wnameless/oracle-xe-11g-r2:18.04-apex
    ports:
      - 1521:1521
    #environment:
    #   - ORACLE_RANDOM_PASSWORD=yes
    #volumes: 
    #   - /home/gvenzl/init_scripts:/container-entrypoint-initdb.d

  oracle_exporter:
    image: iamseth/oracledb_exporter
    ports:
      - 9161:9161
    links:
      - oracle
    environment:
      - DATA_SOURCE_NAME=system/oracle@oracle/xe
    volumes:
      - ./default-metrics.toml:/default-metrics.toml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafanaprovisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafanaprovisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - cortex

  mysql_container:
    image: mysql:latest
    container_name: mysql_container
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE= testdb1
      - MYSQL_USER= testuser
      - MYSQL_PASSWORD= root
    ports:
      - 3306:3306
    volumes:
      - mysql_db_data_container1:/var/lib/mysql

  postgres_container:
    image: postgres:14.1-alpine
    container_name: postgres_container
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes: 
     - ./telegraf.conf:/etc/telegraf/telegraf.conf
     - ./tmp/metrics.out:/tmp/metrics.out
    restart: always
    ports:
    - '8125:8125'
    links:
      - otelcol
    ports:
      - "8092:8092/udp"
      - 8094:8094
      - "8125:8125/udp"
    

  cortex:
    image: cortexproject/cortex:v1.8.1
    volumes:
      - ./cortex-config.yml:/etc/cortex-config/cortex.yaml
    entrypoint:
      - /bin/cortex
      - -config.file=/etc/cortex-config/cortex.yaml
    ports:
      - "9009:9009"
      - "9095:9095/tcp"

  otelcol:
    image: otel/opentelemetry-collector
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    links:
      - cortex
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
  
  tomcat:
    image: fabric8/tomcat-7
    ports:
      - "8080:8080"
    volumes:
      - ./config/tomcat-users.xml:/opt/apache-tomcat-7.0.90/conf/tomcat-users.xml
      - ./config/tomcat-users.xml:/opt/tomcat/conf/tomcat-users.xml

  apache:
    image: httpd:latest
    ports:
      - 80:80
    volumes:
      - ./httpd.conf:/usr/local/apache2/conf/httpd.conf

  activemq:
    image: symptoma/activemq:latest
    volumes: 
      - ./activemq.xml:/conf/activemq.xml
    ports:
      - 8161:8161

  my-mongodb:
    image: mongo:4.2.3-bionic
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      # seeding scripts
      - ./mongo-entrypoint:/docker-entrypoint-initdb.d
      # named volumes
      - mongodb:/data/db
      - mongoconfig:/data/configdb

  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - 9200:9200
volumes:
  influxdb_data:  
  mongodb:
  mongoconfig:
  db:
    driver: local
  mysql_db_data_container1:
  setup:
  elasticsearch:
